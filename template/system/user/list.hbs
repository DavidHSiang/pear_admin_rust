<!DOCTYPE html>
<html>

<head>
    <meta charset="utf-8">
    <title>用户管理</title>
    <link rel="stylesheet" href="/static/component/pear/css/pear.css" />
</head>

<body class="pear-container">
    <div class="layui-card">
        <div class="layui-card-body">
            <form class="layui-form" action="">
                <div class="layui-form-item">
                    <div class="layui-form-item layui-inline">
                        <label class="layui-form-label">账号</label>
                        <div class="layui-input-inline">
                            <input type="text" name="username" placeholder="" class="layui-input">
                        </div>
                    </div>
                    <div class="layui-form-item layui-inline">
                        <label class="layui-form-label">姓名</label>
                        <div class="layui-input-inline">
                            <input type="text" name="real_name" placeholder="" class="layui-input">
                        </div>
                    </div>
                    <div class="layui-form-item layui-inline">
                        <button class="pear-btn pear-btn-md pear-btn-primary" lay-submit lay-filter="user-query">
                            <i class="layui-icon layui-icon-search"></i>
                            查询
                        </button>
                        <button type="reset" class="pear-btn pear-btn-md">
                            <i class="layui-icon layui-icon-refresh"></i>
                            重置
                        </button>
                    </div>
                </div>
            </form>
        </div>
    </div>
    <div class="layui-card">
        <div class="layui-card-body">
            <table id="user-table" lay-filter="user-table"></table>
        </div>
    </div>

    <script type="text/html" id="user-toolbar">
        <button class="pear-btn pear-btn-primary pear-btn-md" lay-event="add">
        <i class="layui-icon layui-icon-add-1"></i>
        新增
    </button>
        <button class="pear-btn pear-btn-danger pear-btn-md" lay-event="batchRemove">
        <i class="layui-icon layui-icon-delete"></i>
        删除
    </button>
    </script>

    <script type="text/html" id="user-bar">
        <button class="pear-btn pear-btn-primary pear-btn-sm" lay-event="edit"><i class="layui-icon layui-icon-edit"></i></button>
        <button class="pear-btn pear-btn-danger pear-btn-sm" lay-event="remove"><i class="layui-icon layui-icon-delete"></i></button>
    </script>

    <script src="/static/component/layui/layui.js"></script>
    <script src="/static/component/pear/pear.js"></script>
    <script>
        layui.use(['table', 'form', 'jquery', 'common'], function () {
            let table = layui.table;
            let form = layui.form;
            let $ = layui.jquery;
            let common = layui.common;
            let MODULE_PATH = "operate/";
            // checkToken();
            $.ajaxSetup({
                xhrFields: {
                    withCredentials: true
                },
            });
            table.render({
                elem: '#user-table',
                url: '/api/users',
                page: true,
                cols: [
                    [{
                        type: 'checkbox'
                    }, {
                        title: 'ID',
                        field: 'id',
                        align: 'center',
                        width: 100
                    }, {
                        title: '账号',
                        field: 'username',
                        align: 'center',
                        width: 100
                    }, {
                        title: '姓名',
                        field: 'real_name',
                        align: 'center'
                    }, {
                        title: '部门',
                        field: 'dept_name',
                        align: 'center'
                    }, {
                        title: '注册时间',
                        field: 'create_at',
                        align: 'center'
                    }, {
                        title: '更新时间',
                        field: 'update_at',
                        align: 'center'
                    }, {
                        title: '状态',
                        field: 'enable',
                        align: 'center',
                        templet: function (res) {
                            if (res.enable == 1) {
                                return '<input type="checkbox" name="enable" value="' + res.id + '" lay-skin="switch" lay-text="启用|禁用" lay-filter="user-enable" checked>'
                            } else {
                                return '<input type="checkbox" name="enable" value="' + res.id + '" lay-skin="switch" lay-text="启用|禁用" lay-filter="user-enable" >'
                            }
                        }
                    }, {
                        title: '操作',
                        toolbar: '#user-bar',
                        align: 'center',
                        width: 130
                    }]
                ],
                skin: 'line',
                toolbar: '#user-toolbar',
                parseData: function (res) { // res 即为原始返回的数据
                    return {
                        "code": res.code, // 解析接口状态
                        "msg": res.msg, // 解析提示文本
                        "count": res.data.total, // 解析数据长度
                        "data": res.data.list // 解析数据列表
                    };
                },
                defaultToolbar: [{
                    title: '刷新',
                    layEvent: 'refresh',
                    icon: 'layui-icon-refresh',
                }, 'filter', 'print', 'exports']
            });

            table.on('tool(user-table)', function (obj) {
                if (obj.event === 'remove') {
                    window.remove(obj);
                } else if (obj.event === 'edit') {
                    window.edit(obj);
                }
            });

            table.on('toolbar(user-table)', function (obj) {
                if (obj.event === 'add') {
                    window.add();
                } else if (obj.event === 'refresh') {
                    window.refresh();
                } else if (obj.event === 'batchRemove') {
                    window.batchRemove(obj);
                }
            });

            form.on('submit(user-query)', function (data) {
                table.reload('user-table', {
                    where: data.field
                })
                return false;
            });

            // 启用-禁用开关
            form.on('switch(user-enable)', function (obj) {

                $.ajax({
                    url: "/api/users/" + this.value + "/enable",
                    type: "PATCH",
                    dataType: 'json',
                    success: function (result) {
                        if (result.code == "0") {
                            layer.msg(result.msg, {
                                icon: 1,
                                time: 1000
                            });
                        } else {
                            layer.msg(result.msg, {
                                icon: 2,
                                time: 1000
                            });
                        }
                    },
                });
            });

            window.add = function () {
                layer.open({
                    type: 2,
                    title: '新增',
                    shade: 0.1,
                    area: [common.isMobile() ? '100%' : '500px', common.isMobile() ? '100%' : '500px'],
                    content: '/users/add'
                });
            }

            window.edit = function (obj) {
                layer.open({
                    type: 2,
                    title: '修改',
                    shade: 0.1,
                    area: ['500px', '400px'],
                    content: '/users/edit/' + obj.data.id
                });
            }

            window.remove = function (obj) {
                layer.confirm('确定要删除该用户', {
                    icon: 3,
                    title: '提示'
                }, function (index) {
                    layer.close(index);
                    let loading = layer.load();
                    $.ajax({
                        url: "/api/users/" + obj.data['id'],
                        dataType: 'json',
                        type: 'delete',
                        success: function (result) {
                            layer.close(loading);
                            if (result.code == "0") {
                                layer.msg(result.msg, {
                                    icon: 1,
                                    time: 1000
                                }, function () {
                                    obj.del();
                                });
                            } else {
                                layer.close(loading);
                                layer.msg(result.msg, {
                                    icon: 2,
                                    time: 1000
                                });
                            }
                        }
                    })
                });
            }

            window.batchRemove = function (obj) {
                let data = table.checkStatus(obj.config.id).data
                console.log(data)
                if (data.length === 0) {
                    layer.msg('未选中数据', {
                        icon: 3,
                        time: 1000
                    })
                    return false
                }
                var ids = []
                for (var i = 0; i < data.length; i++) {
                    ids.push(data[i].id)
                }
                console.log(ids)

                layer.confirm('确定要删除这些用户', {
                    icon: 3,
                    title: '提示'
                }, function (index) {
                    layer.close(index);
                    let loading = layer.load();
                    $.ajax({
                        url: "/api/users/" + ids,
                        dataType: 'json',
                        type: 'delete',
                        success: function (result) {
                            layer.close(loading);
                            if (result.code == "0") {
                                layer.msg(result.msg, {
                                    icon: 1,
                                    time: 1000
                                }, function () {
                                    table.reload('user-table');
                                });
                            } else {
                                layer.msg(result.msg, {
                                    icon: 2,
                                    time: 1000
                                });
                            }
                        }
                    })
                });
            }

            window.refresh = function (param) {
                table.reload('user-table');
            }
        })
    </script>
</body>

</html>
