<!DOCTYPE html>
<html>

<head>
    <meta charset="utf-8">
    <title>日志管理</title>
    <link rel="stylesheet" href="/static/component/pear/css/pear.css" />
</head>

<body class="pear-container">

    <div class="layui-card">
        <div class="layui-card-body">
            <div class="layui-tab layui-tab-card">
                <ul class="layui-tab-title">
                    <li class="layui-this">登录日志</li>
                    <li>操作日志</li>
                </ul>
                <div class="layui-tab-content">
                    <div class="layui-tab-item layui-show">
                        <table style="margin-top: 10px;" id="log-login-table" lay-filter="log-login-table"></table>
                    </div>
                    <div class="layui-tab-item">
                        <table style="margin-top: 10px;" id="log-operate-table" lay-filter="log-operate-table"></table>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="/static/component/layui/layui.js"></script>
    <script src="/static/component/pear/pear.js"></script>

    <script>
        layui.use(['table', 'form', 'jquery', 'element', 'util'], function () {
            let table = layui.table
            let form = layui.form

            let MODULE_PATH = '/api/system_logs'

            let cols = [
                [
                    { title: 'ID', field: 'id', align: 'center' },
                    { title: '请求方式', field: 'method', align: 'center' },
                    { title: '接口', field: 'url', align: 'center' },
                    { title: '浏览器', field: 'user_agent', align: 'center' },
                    { title: '操作地址', field: 'ip', align: 'center' },
                    { title: '访问时间', field: 'create_at', align: 'center' },
                    { title: '操作人ID', field: 'uid', align: 'center' },
                    { title: '描述', field: 'desc', align: 'center' },
                    {
                        title: '访问状态',
                        field: 'success',
                        align: 'center',
                        templet: function (res) {
                            if (res.success) {
                                return '<span style="color: green">成功</span>'
                            } else {
                                return '<span style="color: red">失败</span>'
                            }
                        }
                    },
                ]
            ]

            table.render({
                elem: '#log-operate-table',
                url: MODULE_PATH + '?log_type=2',
                page: true,
                cols: cols,
                skin: 'line',
                toolbar: false,

                parseData: function (res) { // res 即为原始返回的数据
                    return {
                        "code": res.code, // 解析接口状态
                        "msg": res.msg, // 解析提示文本
                        "count": res.data.total, // 解析数据长度
                        "data": res.data.list // 解析数据列表
                    };
                },
            })

            table.render({
                elem: '#log-login-table',
                url: MODULE_PATH + '?log_type=1',
                page: true,
                cols: cols,
                skin: 'line',
                toolbar: false,

                parseData: function (res) { // res 即为原始返回的数据
                    return {
                        "code": res.code, // 解析接口状态
                        "msg": res.msg, // 解析提示文本
                        "count": res.data.total, // 解析数据长度
                        "data": res.data.list // 解析数据列表
                    };
                },
            })

            form.on('submit(dict-type-query)', function (data) {
                table.reload('dict-type-table', { where: data.field })
                return false
            })

            table.on('tool(log-operate-table)', function (obj) {
                if (obj.event === 'details') {
                    window.info(obj)
                }
            })

            table.on('tool(log-login-table)', function (obj) {
                if (obj.event === 'details') {
                    window.info(obj)
                }
            })

            window.info = function (obj) {
                layer.open({
                    type: 2,
                    title: '详细信息',
                    shade: 0,
                    area: ['400px', '400px'],
                    content: MODULE_PATH + 'info',
                    success: function (layero) {
                        let iframeWin = window[layero.find('iframe')[0]['name']]
                        iframeWin.show(obj.data)
                    }
                })
            }
        })
    </script>
</body>

</html>
